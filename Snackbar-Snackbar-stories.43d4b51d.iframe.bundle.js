"use strict";(self.webpackChunk_hcl_software_enchanted_react_components=self.webpackChunk_hcl_software_enchanted_react_components||[]).push([[3782],{"./src/Snackbar/Snackbar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{InteractiveExample:()=>InteractiveExample,VisualTest:()=>VisualTest,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Snackbar_stories});__webpack_require__("./node_modules/react/index.js");var chevron_down=__webpack_require__("./node_modules/@hcl-software/enchanted-icons/dist/carbon/es/chevron--down/index.js"),chevron_down_default=__webpack_require__.n(chevron_down),Snackbar=__webpack_require__("./src/Snackbar/Snackbar.tsx"),styled=__webpack_require__("./node_modules/@mui/material/esm/styles/styled.js"),SnackbarContainerPosition=function(SnackbarContainerPosition){return SnackbarContainerPosition.LEFT="left",SnackbarContainerPosition.RIGHT="right",SnackbarContainerPosition}({}),SnackbarContainer=(0,styled.Ay)("div")((function(_ref){var _ref$position=_ref.position,position=void 0===_ref$position?SnackbarContainerPosition.RIGHT:_ref$position;return{position:"fixed",bottom:"12px",right:position===SnackbarContainerPosition.RIGHT?"12px":"unset",left:position===SnackbarContainerPosition.LEFT?"12px":"unset",zIndex:2}}));const Snackbar_SnackbarContainer=SnackbarContainer;try{SnackbarContainer.displayName="SnackbarContainer",SnackbarContainer.__docgenInfo={description:"",displayName:"SnackbarContainer",props:{position:{defaultValue:null,description:"",name:"position",required:!1,type:{name:"enum",value:[{value:'"left"'},{value:'"right"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Snackbar/SnackbarContainer.tsx#SnackbarContainer"]={docgenInfo:SnackbarContainer.__docgenInfo,name:"SnackbarContainer",path:"src/Snackbar/SnackbarContainer.tsx#SnackbarContainer"})}catch(__react_docgen_typescript_loader_error){}var CircularProgress=__webpack_require__("./src/ProgressIndicator/CircularProgress/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _typeof(o){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&"function"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?"symbol":typeof o},_typeof(o)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=_typeof(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==_typeof(i)?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}const Snackbar_stories={title:"Feedback/Snackbar",component:Snackbar.Ay,parameters:{docs:{story:{height:"200px",inline:!0}}},argTypes:{variant:{description:"The variant to use that will determine leading icon in snackbar.",table:{defaultValue:{summary:"information"}}},showStackSnackbar:{description:"Show multiple snackbar in stack when true, this is for testing purpose only and and not an actual property of Snackbar.",control:"boolean",table:{defaultValue:{summary:!0}}},disabledSnackbar:{description:"Renders snackbar buttons as disabled"},buttonText:{description:"Text to show inside action Button. If empty string or no corresponding buttonAction function, it will hide itself.",default:"Button"},message:{description:"The message to display.",default:"Alert message"},open:{description:"If true, the component is shown."},showPlaceholderIcon:{description:"Used to toggle visibility of placeholder icon."},progressVariant:{options:[CircularProgress.Z6.DETERMINATE,CircularProgress.Z6.INDETERMINATE],control:{type:"radio"},description:"This will only affect component when the variant is in progress. Choose what variant of CircularProgress to use.",table:{defaultValue:{summary:CircularProgress.Z6.INDETERMINATE}}},progressValue:{description:"The value of the progress indicator for the determinate variant. Value between 0 and 100.",control:{type:"range",min:0,max:100},table:{defaultValue:{summary:0}}},buttonAction:{control:!1,description:"Callback fired when action button is clicked."},onClose:{control:!1,description:"Callback fired when the component requests to be closed. Typically onClose is used to set state in the parent component, which is used to control the Snackbar open prop. The reason\n        parameter can optionally be used to control the response to onClose, for example ignoring clickaway."},placeholderIcon:{control:!1,description:"The icon button shown that provides additional functionality or action to the snackbar. Typically, it is an HTML or JSX element with onClick callback to be fired when clicked."},placeholderIconAction:{control:!1,description:"Callback fired when placeholder icon button is clicked."},ref:{description:"https://mui.com/material-ui/api/snackbar/",control:!1}}};var InteractiveExampleTemplate=function InteractiveExampleTemplate(args){var messageTwo="".concat(args.message," > a bit longer"),messageThree="".concat(args.message," > a bit much more longer ;-)");return args.showStackSnackbar?(0,jsx_runtime.jsxs)(Snackbar_SnackbarContainer,{position:SnackbarContainerPosition.LEFT,children:[(0,jsx_runtime.jsx)(Snackbar.Ay,_objectSpread({},args)),(0,jsx_runtime.jsx)(Snackbar.Ay,_objectSpread(_objectSpread({},args),{},{message:messageTwo})),(0,jsx_runtime.jsx)(Snackbar.Ay,_objectSpread(_objectSpread({},args),{},{message:messageThree}))]}):(0,jsx_runtime.jsx)(Snackbar_SnackbarContainer,{children:(0,jsx_runtime.jsx)(Snackbar.Ay,_objectSpread({},args))})};InteractiveExampleTemplate.displayName="InteractiveExampleTemplate";var InteractiveExample=InteractiveExampleTemplate.bind({});InteractiveExample.parameters={options:{showPanel:!0}},InteractiveExample.args=_objectSpread(_objectSpread({},Snackbar.Ay.defaultProps),{},{message:"Alert message.",open:!0,buttonText:"Button",placeholderIcon:(0,jsx_runtime.jsx)(chevron_down_default(),{}),showPlaceholderIcon:!0,showStackSnackbar:!1});var VisualTestTemplate=function VisualTestTemplate(args){return(0,jsx_runtime.jsxs)(Snackbar_SnackbarContainer,{children:[(0,jsx_runtime.jsx)(Snackbar.Ay,_objectSpread({},args)),(0,jsx_runtime.jsx)(Snackbar.Ay,_objectSpread(_objectSpread({},args),{},{variant:Snackbar.W.SUCCESS})),(0,jsx_runtime.jsx)(Snackbar.Ay,_objectSpread(_objectSpread({},args),{},{variant:Snackbar.W.WARNING})),(0,jsx_runtime.jsx)(Snackbar.Ay,_objectSpread(_objectSpread({},args),{},{variant:Snackbar.W.ERROR})),(0,jsx_runtime.jsx)(Snackbar.Ay,_objectSpread(_objectSpread({},args),{},{variant:Snackbar.W.PROGRESS,progressVariant:CircularProgress.Z6.DETERMINATE,progressValue:50}))]})};VisualTestTemplate.displayName="VisualTestTemplate";var VisualTest=VisualTestTemplate.bind({});VisualTest.parameters={options:{showPanel:!1}},VisualTest.args=_objectSpread(_objectSpread({},Snackbar.Ay.defaultProps),{},{message:"Alert message.",open:!0,buttonText:"Button",placeholderIcon:(0,jsx_runtime.jsx)(chevron_down_default(),{}),showPlaceholderIcon:!0}),InteractiveExample.parameters={...InteractiveExample.parameters,docs:{...InteractiveExample.parameters?.docs,source:{originalSource:"args => {\n  const messageTwo = `${args.message} > a bit longer`;\n  const messageThree = `${args.message} > a bit much more longer ;-)`;\n  // @ts-ignore for test only, its purpose is to show snackbar when its stack\n  if (args.showStackSnackbar) {\n    return <SnackbarContainer position={SnackbarContainerPosition.LEFT}>\n        <Snackbar {...args} />\n        <Snackbar {...args} message={messageTwo} />\n        <Snackbar {...args} message={messageThree} />\n      </SnackbarContainer>;\n  }\n  return <SnackbarContainer>\n      <Snackbar {...args} />\n    </SnackbarContainer>;\n}",...InteractiveExample.parameters?.docs?.source}}},VisualTest.parameters={...VisualTest.parameters,docs:{...VisualTest.parameters?.docs,source:{originalSource:"args => {\n  return <SnackbarContainer>\n      <Snackbar {...args} />\n      <Snackbar {...args} variant={SnackbarVariants.SUCCESS} />\n      <Snackbar {...args} variant={SnackbarVariants.WARNING} />\n      <Snackbar {...args} variant={SnackbarVariants.ERROR} />\n      <Snackbar {...args} variant={SnackbarVariants.PROGRESS} progressVariant={CircularProgressVariants.DETERMINATE} progressValue={50} />\n    </SnackbarContainer>;\n}",...VisualTest.parameters?.docs?.source}}};const __namedExportsOrder=["InteractiveExample","VisualTest"]}}]);